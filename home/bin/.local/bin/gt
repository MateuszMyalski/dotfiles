#!/usr/bin/env bash

if [[ "$1" == "-h" || $# -lt 1 ]]; then
    echo "Usage: $(basename $0) [OPTIONS]"
    cat <<EOF
Options:
  h        shows this help
  s        git status
  aa       git add *
  c        git commit -m
  ca       git commit --amend
  can      git commit --amend --no-edit
  l        git log
  hb       git checkout -b <branch>
           (without name create random branch name)
  bs       git branch --set-upstream=<upstream>
           (without upstream opens fzf)
  p        git push
  r        git for-each-ref --format='%(refname:short)' refs/remotes/
EOF
    exit 1
fi

flag="$1"
shift

case "$flag" in
    aa) git add \* "$@" ;;
    s) git status "$@" ;;
    c) git commit -m "$@" ;;
    ca) git commit --amend "$@" ;;
    can) git commit --amend --no-edit "$@" ;;
    l) git log "$@" ;;
    hb)
        if [[ -z $1 ]]; then
            branch_name=$(tr -dc a-z </dev/urandom | head -c 6)
        else
            branch_name=$1
        fi
        git checkout -b "$branch_name"
        ;;
    bs)
        if ! command -v fzf &>/dev/null; then
            git branch --set-upstream="$1"
            exit $?
        fi

        echo "Select a remote branch to set as upstream:"
        branch=$(git for-each-ref --format='%(refname:short)' refs/remotes/ | fzf --height=15 --reverse --border --prompt="Upstream> ")

        if [[ -z "$branch" ]]; then
            echo "No branch selected."
            exit 1
        fi

        echo "Selected $branch."
        git branch --set-upstream-to="$branch"
        ;;
    p) git push "$@" ;;
    r) git for-each-ref --format='%(refname:short)' refs/remotes/ ;;
    *) echo "Unknown option: $flag" ;;
esac
