#!/bin/bash

# Directory aliases ===========================================
alias ls='ls --color=auto'
alias ll='ls -lh'
alias la='ls -Alh'

alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

rm_dir_recursivley() {
    if [ "$#" -eq 0 ]; then
        echo "Usage: <dir1> <dir2> <dir3> ..."
        return 1
    fi

    for path in "$@"; do
        if [ "$path" = "." ]; then
            echo "This looks sketchy..."
            return 1
        fi

        # Check if the provided path exists
        if [ ! -e "$path" ]; then
            echo "The provided path does not exist."
            return 1
        fi

        # Check if it is a directory
        if [ ! -d "$path" ]; then
            echo "The provided path is not a directory."
            return 1
        fi

        # Check if the directory is empty
        local item_count=""
        item_count=$(find "$path" -mindepth 1 | wc -l)
        if [ "$item_count" -eq 0 ]; then
            echo "The folder is empty."
        fi

        # Display the number of items
        echo "The folder '$path' contains $item_count item(s)."

        # Ask the user if they want to delete items
        read -rp "Do you want to delete items in '$path'? (y/n): " response

        if [ "$response" = "y" ] || [ "$response" = "Y" ]; then
            # Delete items in the folder
            rm -rf "$path"
            echo "Items deleted successfully."
        else
            echo "Operation aborted."
            return 1
        fi
    done

    return 0
}

alias rmd='rm_dir_recursivley'

cd_and_list_files() {
    cd "$1" || return 1
    ll
}

alias cdl='cd_and_list_files'
alias ..='cdl ..'
alias ...='cdl ../../'

# GIT aliases =================================================
alias gs='git status'
alias gc='git commit'
alias gc-a='git commit --amend'
alias gc-an='git commit --amend --no-edit'
alias gl='git log'
alias gc-b='git checkout -b'
alias gu='git push'

# repo tool aliases ===========================================
alias rs='repo status'
alias ru='repo upload'

# fzf =========================================================
alias fzf-c='fzf --bind "enter:become(code {})"'

# ranger ======================================================
alias rr='ranger'

# Memory ======================================================
alias df='df -h'
alias free='free -m'

# Python
alias py-venv-c='python -m venv .venv'
alias py-venv-a='source .venv/bin/activate'
alias py-venv-d='deactivate'

# Minicom =====================================================
# Function to create UART aliases
create_uart_alias() {
    local speed="$1"
    local port="$2"
    local serial_tool="minicom"
    alias "uart_${speed}_USB${port}"="${serial_tool} -b ${speed} -D /dev/ttyUSB${port}"
}

create_uart_alias "57600" "0"
create_uart_alias "57600" "1"
create_uart_alias "230400" "0"
create_uart_alias "115200" "0"
create_uart_alias "230400" "1"
create_uart_alias "115200" "1"
create_uart_alias "3000000" "1"
create_uart_alias "3000000" "0"

# Misc ========================================================
alias ntf='spd-say "Task finished!"'
alias crepl='code main.c && watch "gcc main.c -o main && ./main"'
alias grep='grep --color=auto'
alias clr="clear"